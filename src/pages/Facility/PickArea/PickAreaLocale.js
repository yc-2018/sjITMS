import { formatMessage } from 'umi/locale';

export const pickAreaLocale = {
  title: formatMessage({ id: 'pickArea.title' }),
  pickTypeTitle: formatMessage({id:'pick.type.title'}),
  rplConfigTitle:formatMessage({id:'pick.rpl.config.title'}),
  configTitle:formatMessage({id:'config.title'}),
  IPopconfirmTitle: formatMessage({ id: 'pickArea.IPopconfirmTitle' }),
  binScope:formatMessage({ id: 'pickArea.binScope' }),
  wholeContainer: formatMessage({ id: 'pickArea.wholeContainer' }),
  basicDirectCollect:formatMessage({ id: 'pickArea.basicDirectCollect' }),
  basicUnifyCollectTempBin: formatMessage({ id: 'pickArea.basicUnifyCollectTempBin' }),
  wholePickMethod:formatMessage({ id: 'pickArea.wholePickMethod' }),
  pickType: formatMessage({ id: 'pickArea.pickType' }),
  pickMethod: formatMessage({ id: 'pickArea.pickMethod' }),
  pickMode:formatMessage({ id: 'pickArea.pickMode' }),
  maxVolume: formatMessage({ id: 'pickArea.maxVolume' }),
  lastVolumeRate: formatMessage({ id: 'pickArea.lastVolumeRate' }),
  maxArticleCount: formatMessage({ id: 'pickArea.maxArticleCount' }),
  pickTempBin: formatMessage({ id: 'pickArea.pickTempBin' }),
  directCollect:formatMessage({ id: 'pickArea.directCollect' }),
  unifyCollectTempBin: formatMessage({ id: 'pickArea.unifyCollectTempBin' }),
  rplMode:formatMessage({ id: 'pickArea.rplMode' }),
  rplStep: formatMessage({ id: 'pickArea.rplStep' }),
  rplType: formatMessage({ id: 'pickArea.rplType' }),
  rplMethod: formatMessage({ id: 'pickArea.rplMethod' }),
  rplMethodExtend: formatMessage({ id: 'pickArea.rplMethodExtend' }),
  rplTempBin: formatMessage({ id: 'pickArea.rplTempBin' }),
  t: formatMessage({ id: 'pickArea.T' }),
  containerType: formatMessage({ id: 'pickArea.containerType' }),
  allocateTransferBin: "分拨中转位",
  targetStockConfigTitle:"指定库存配置",
  maxStoreCount: "分单门店数",
  targetStock: "是否指定库存",
};